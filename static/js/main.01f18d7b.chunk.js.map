{"version":3,"sources":["constants/Theme.tsx","context/ThemeContext.tsx","constants/Mixins.tsx","constants/PageConstants.tsx","pages/HomePage.tsx","pages/BlogPage.tsx","pages/NotFoundPage.tsx","Routes.tsx","App.tsx","index.tsx"],"names":["CommonTheme","purple","blue","darkBlue","green","lightYellow","yellow","red","orange","dark1","dark2","dark3","light1","light2","light3","light4","black","white","transparent","breakpoints","zero","mobile","light","text","background","primary","link","accent","subtitle","isDark","dark","ThemeContext","createContext","PageWrapper","styled","div","PageContent","PageLink","a","theme","HomePage","useTheme","Header","Name","Subtitle","Icons","IconLink","href","target","rel","Section","SectionTitle","Description","to","Footer","marginBottom","BlogPage","useEffect","document","title","Text","NotFoundPage","Routes","exact","path","component","GlobalStyle","createGlobalStyle","App","useState","stored","localStorage","getItem","currentTheme","setTheme","Provider","value","toggleTheme","newTheme","setItem","Theme","Body","ReactGA","initialize","pageview","window","location","pathname","search","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.01f18d7b.chunk.js","sourcesContent":["export const CommonTheme = {\n  purple: '#b388ff',\n  blue: '#80d8ff',\n  darkBlue: '#304ffe',\n  green: '#00c853',\n  lightYellow: '#fff9c4',\n  yellow: '#feed89',\n  red: '#ff899b',\n  orange: '#ffc400',  \n\n  dark1: '#172b4d',\n  dark2: '#505f79',\n  dark3: '#97a0af',\n\n  light1: '#f4f5f7',\n  light2: '#ebecf0',\n  light3: '#dfe1e5',\n  light4: '#c6c9c9',\n\n  black: '#000000',\n  white: '#ffffff',\n  transparent: 'rgba(0,0,0,0)',\n\n  breakpoints: {\n    zero: 0,\n    mobile: 600,\n  },\n}\n\nexport default {\n  light: {\n    ...CommonTheme,\n    text: CommonTheme.black,\n    background: CommonTheme.white,\n    primary: '#40B0EF',\n    link: '#40B0EF',\n    accent: '#B6D6F2',\n    subtitle: CommonTheme.dark3,\n    isDark: false,\n  },\n  dark: {\n    ...CommonTheme,\n    text: CommonTheme.white,\n    background: '#020202',\n    primary: '#448aff',\n    link: '#00b0ff',\n    accent: '#ffff8d',\n    subtitle: CommonTheme.light3,\n    isDark: true,\n  }\n};\n","import { createContext } from \"react\";\n\nexport type ThemeType = \"light\" | \"dark\";\n\ntype ThemeContextProps = {\n  theme: ThemeType;\n  toggleTheme: () => void;\n};\n\nexport const ThemeContext = createContext({} as ThemeContextProps);\n","import styled from \"styled-components\";\nimport { PAGE_CONTENT_WIDTH } from \"./PageConstants\";\n\nexport const InterFont = `Inter, -apple-system, BlinkMacSystemFont, San Francisco, Roboto, Segoe UI, Helvetica Neue, sans-serif`;\nexport const AndersonFont = `'Anderson Grotesk', -apple-system, BlinkMacSystemFont, San Francisco, Roboto, Segoe UI, Helvetica Neue, sans-serif`;\n\nexport const PageWrapper = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 16px;\n  width: 100vw;\n`;\n\nexport const PageContent = styled.div`\n  max-width: ${PAGE_CONTENT_WIDTH}px;\n  width: 100%;\n  margin: 0 auto;\n  padding-left: 32px;\n  padding-right: 32px;\n\n  @media only screen and (max-width: ${PAGE_CONTENT_WIDTH}px) {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`;\n\nexport const PageLink = styled.a`\n  position: relative;\n  font-weight: 500;\n  color: ${({ theme }) => theme.link};\n  transition: 0.2s all ease-in-out;\n\n  ${({ theme }) =>\n    theme.isDark\n      ? `background-image: linear-gradient(\n          ${theme.lightYellow} 0%,\n          ${theme.lightYellow} 100%\n        );`\n      : `background-image: linear-gradient(\n          transparent 60%,\n          ${theme.accent} 12px\n        );`}\n\n  background-size: 0;\n  background-repeat: no-repeat;\n\n  &::after {\n    position: absolute;\n    content: \"\";\n    background-color: ${({ theme }) =>\n      theme.isDark ? theme.lightYellow : theme.accent};\n    height: ${({ theme }) => (theme.isDark ? \"120%\" : \"8px\")};\n    ${({ theme }) => (theme.isDark ? \"top: -10%;\" : \"top: 100%;\")}\n    ${({ theme }) => (theme.isDark ? \"\" : \"transform: translateY(-100%);\")}\n    white-space: nowrap;\n  }\n\n  &:hover {\n    background-size: 100%;\n    color: ${({ theme }) => (theme.isDark ? theme.darkBlue : theme.link)};\n  }\n`;\n","export const PAGE_CONTENT_WIDTH = 720;","import React from \"react\";\nimport { GitHub, Mail, Linkedin, FileText } from \"react-feather\";\nimport styled, { useTheme } from \"styled-components\";\nimport { PageLink, PageContent, PageWrapper } from \"constants/Mixins\";\nimport { Link } from \"react-router-dom\";\n\n// import Project from \"components/Project\";\n\nconst HomePage = () => {\n  const theme = useTheme();\n\n  return (\n    <PageWrapper>\n      <PageContent>\n        <Header>\n          <Name>Arav Watwani</Name>\n          <Subtitle>Software Engineer</Subtitle>\n          <Icons>\n            <IconLink\n              href={\"https://github.com/aravwatwani\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <GitHub />\n            </IconLink>\n\n            <IconLink\n              href={\"resume.pdf\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FileText />\n            </IconLink>\n\n            <IconLink\n              href={\"mailto:arav@berkeley.edu\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Mail />\n            </IconLink>\n            <IconLink\n              href={\"https://linkedin.com/in/aravwatwani\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Linkedin />\n            </IconLink>\n          </Icons>\n        </Header>\n        <Section>\n          <SectionTitle>About</SectionTitle>\n          <Description>\n          Hello! I'm Aravâ€”a computer science student at the \n            <PageLink\n                href={\"https://berkeley.edu\"}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              > University of California, Berkeley  \n            </PageLink>\n            , and an aspiring software engineer. My interests lie in technology, teaching, and design.{\" \"}\n          </Description>\n          <Description>\n\n            Currently, I am a software engineering intern at <PageLink\n              href={\"https://lpl.com\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            > LPL Financial\n          </PageLink> working on supporting CRM systems. In the past, I've helped teach UC Berkeley's introductory computer science course, \n            <PageLink\n              href={\"https://cs61a.org\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            > CS 61A\n          </PageLink>, and have worked as a research assistant in the Haas School of Business, building software that helps researchers visualize discrepancies in the data they collect. \n          \n          </Description>\n          <Description> \n            Aside from being a full-time student, I enjoy playing and finding new music. I'm also an avid photographer, and enjoy \n            extending my view of the world to let others live through my eyes at any particular moment.\n            You can find some of my work <PageLink\n              href={\"https://ocf.io/~aravwatwani\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            > here\n          </PageLink>. \n          </Description>\n          <Description>\n            Feel free to contact me at \n            <PageLink\n              href={\"mailto:arav@berkeley.edu\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            > arav@berkeley.edu  \n          </PageLink>.\n          </Description>\n          </Section>\n        \n        {/* <Section>\n          <SectionTitle>Design & Programming Projects</SectionTitle>\n          <Project\n            title=\"COVID-19 Case Visualization\"\n            description=\"An interactive data visualization of COVID-19 case counts in every state in the United States.\"\n            codeUrl=\"https://www.github.com/aravwatwani/covid\"\n            tags={[\"Design\", \"D3.js\", \"HTML\"]}\n            tagColors={[theme.blue, theme.red, theme.purple, theme.orange]}\n            margin=\"0\"\n          />\n          <Project\n            title=\"Gitlet\"\n            description=\"A version control system in Java that replicates the core functionality of Git.\"\n            privRepo=\"https://uwflow.com\"\n            tags={[\"Java\"]}\n            tagColors={[theme.red, theme.blue, theme.purple]}\n          />\n          <Project\n            title=\"Mental Health Resources\"\n            description=\"A case study and prototype of an application that streamlines multiple mental health resources to promote well-being.\"\n            paperUrl=\"https://www.behance.net/gallery/108939903/Mental-Health-Resources\"\n            tags={[\"UX Research\", \"Figma\", \"Prototyping\", \"Product Design\"]}\n            tagColors={[theme.blue, theme.red, theme.purple, theme.orange]}\n          />\n          <Project\n            title=\"Photography Portfolio\"\n            description=\"A personal web portfolio to showcase and display my photography endeavors.\"\n            demoUrl=\"https://ocf.io/~aravwatwani\"\n            codeUrl=\"https://github.com/aravwatwani/photo-site\"\n            tags={[\"HTML\", \"CSS\", \"JavaScript\", \"Design\"]}\n            tagColors={[theme.blue, theme.purple, theme.red, theme.orange]}\n          />\n          <Project\n            title=\"KirbyMap\"\n            description=\"A program that inputs a user-created text file of a map and uses a pathfinding algorithm to determinethe shortest distance between two given characters.\"\n            codeUrl=\"https://github.com/aravwatwani/Pathfinding\"\n            tags={[\"Java\"]}\n            tagColors={[theme.red]}\n          />    \n\n        </Section> */}\n\n        <Section>\n          <Link to=\"/blog\">\n            <PageLink>\n              <SectionTitle>Writing &#8594;</SectionTitle>\n            </PageLink>\n          </Link>\n          \n        </Section>\n\n        <Section>\n          <Footer>A work in progress.<br></br>Template by <PageLink\n              href={\"https://github.com/edwinzhng/\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            > Edwin Zhang  \n          </PageLink>.</Footer>\n        </Section>\n\n\n      </PageContent>\n    </PageWrapper>\n  );\n};\n\nexport default HomePage;\n\nconst Header = styled.div`\n  margin: 120px auto 100px auto;\n`;\n\n\nconst Name = styled.div`\n  font-weight: 700;\n  font-size: 48px;\n  margin-bottom: 8px;\n  color: ${({ theme }) => theme.primary};\n`;\n\nconst Subtitle = styled.div`\n  font-weight: 400;\n  font-size: 20px;\n  margin-bottom: 40px;\n  color: ${({ theme }) => theme.subtitle};\n`;\n\nconst IconLink = styled(PageLink)`\n  &:hover {\n    background-size: 0;\n    svg {\n      fill: ${({ theme }) => theme.accent};\n      transition: 0.2s all ease-in-out;\n    }\n  }\n`;\n\nconst Icons = styled.div`\n  display: inline-block;\n  margin-right: 24px;\n\n  svg {\n    width: 22px;\n    margin-right: 16px;\n    stroke: ${({ theme }) => theme.subtitle};\n  }\n`;\n\nconst Description = styled.div<{ marginBottom?: number }>`\n  line-height: 1.5;\n  margin-bottom: ${({ marginBottom = 24 }) => marginBottom}px;\n`;\n\nconst Footer = styled.div<{ marginBottom?: number }>`\n  line-height: 1.5;\n  margin-bottom: ${({ marginBottom = 24 }) => marginBottom}px;\n  text-align: center;\n  position: relative;\n  font-size: 13px;\n  color: ${({ theme }) => theme.subtitle};\n`;\n\nconst Section = styled.div`\n  margin-bottom: 100px;\n`;\n\nconst SectionTitle = styled.div`\n  display: inline-block;\n  position: relative;\n  font-weight: 700;\n  font-size: 20px;\n  margin-bottom: 32px;\n\n  &::after {\n    content: \"\";\n    background-color: ${({ theme }) => '#91B7D9'};\n    height: 8px;\n    position: absolute;\n    top: 60%;\n    left: 0;\n    width: 100%;\n    z-index: -1;\n    opacity: 0.5;\n    transition: 0.2s all ease-in-out;\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { PageContent, PageLink, PageWrapper } from \"constants/Mixins\";\nimport styled from \"styled-components\";\n\nconst BlogPage = () => {\n  useEffect(() => {\n    document.title = \"Arav Watwani\";\n  }, []);\n\n  return (\n    <PageWrapper>\n      <PageContent>\n        <Text>Writing</Text>\n        \n        <Link to=\"/\">\n          <PageLink>&#8592; Back to home</PageLink>\n        </Link>\n      </PageContent>\n    </PageWrapper>\n\n    \n  );\n};\n\nexport default BlogPage;\n\nconst Text = styled.div`\n  font-size: 32px;\n  font-weight: 700;\n  margin-top: 120px;\n  margin-bottom: 40px;\n`;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { PageContent, PageLink, PageWrapper } from \"constants/Mixins\";\nimport styled from \"styled-components\";\n\nconst NotFoundPage = () => {\n  useEffect(() => {\n    document.title = \"Arav Watwani\";\n  }, []);\n\n  return (\n    <PageWrapper>\n      <PageContent>\n        <Text>This page doesn't exist!</Text>\n        <Link to=\"/\">\n          <PageLink>&#8592; Home</PageLink>\n        </Link>\n      </PageContent>\n    </PageWrapper>\n  );\n};\n\nexport default NotFoundPage;\n\nconst Text = styled.div`\n  font-size: 32px;\n  font-weight: 700;\n  margin-top: 120px;\n  margin-bottom: 40px;\n`;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport HomePage from \"pages/HomePage\";\nimport BlogPage from \"pages/BlogPage\";\nimport NotFoundPage from \"pages/NotFoundPage\";\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route exact path=\"/blog\" component={BlogPage} />\n      <Route component={NotFoundPage} />\n\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n\n","import React, { useEffect, useState } from \"react\";\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\n\nimport Theme from \"constants/Theme\";\nimport { ThemeContext, ThemeType } from \"context/ThemeContext\";\nimport Routes from \"Routes\";\n\nconst THEME_KEY = \"theme\";\nconst currentTheme = () => {\n  const stored = localStorage.getItem(THEME_KEY);\n  if (stored === \"light\" || stored === \"dark\") {\n    return stored;\n  }\n  return \"light\";\n};\n\nconst GlobalStyle = createGlobalStyle`\n  body, html {\n    color: ${({ theme }) => theme.text};\n    background: ${({ theme }) => theme.background};\n  }\n`;\n\nconst App = () => {\n  useEffect(() => {}, []);\n\n  const [theme, setTheme] = useState<ThemeType>(currentTheme());\n  const toggleTheme = () => {\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(newTheme);\n    localStorage.setItem(THEME_KEY, newTheme);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      <ThemeProvider theme={theme === \"light\" ? Theme.light : Theme.dark}>\n        <GlobalStyle />\n        <Body>\n          <Routes />\n        </Body>\n      </ThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default App;\n\nconst Body = styled.div`\n  min-height: 100vh;\n  color: ${({ theme }) => theme.text};\n  background: ${({ theme }) => theme.background};\n  transition: 0.2s background ease-in-out;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactGA from \"react-ga\";\n\nimport App from \"App\";\n\nimport \"./index.css\";\n\nif (process.env.NODE_ENV && process.env.NODE_ENV !== \"development\") {\n  ReactGA.initialize(\"UA-101333629-1\");\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}