{"version":3,"sources":["constants/Theme.tsx","context/ThemeContext.tsx","constants/Mixins.tsx","constants/PageConstants.tsx","pages/HomePage.tsx","components/Project.tsx","pages/WritingPage.tsx","pages/NotFoundPage.tsx","pages/writing/RiskAversion.tsx","pages/writing/ClarityAndDrive.tsx","pages/writing/Loop.tsx","Routes.tsx","App.tsx","index.tsx"],"names":["CommonTheme","purple","blue","darkBlue","green","lightYellow","yellow","red","orange","dark1","dark2","dark3","light1","light2","light3","light4","black","white","transparent","breakpoints","zero","mobile","light","text","background","primary","link","accent","subtitle","isDark","dark","ThemeContext","createContext","PageWrapper","styled","div","PageContent","PageLink","a","theme","HomePage","useEffect","document","title","Header","Name","Subtitle","Icons","IconLink","href","target","rel","Section","SectionTitle","Description","Footer","marginBottom","Project","description","tags","tagColors","readUrl","margin","ProjectWrapper","style","border","borderRadius","padding","LeftColumn","marginRight","Title","Tags","map","tag","idx","Tag","color","RightColumn","Icon","WritingPage","to","NotFoundPage","Text","RiskAversion","data","setData","useState","fetch","then","res","ok","Error","statusText","json","catch","err","console","log","className","blockMap","Loop","Routes","basename","exact","path","component","ClarityAndDrive","GlobalStyle","createGlobalStyle","App","stored","localStorage","getItem","currentTheme","setTheme","Provider","value","toggleTheme","newTheme","setItem","Theme","Body","ReactGA","initialize","pageview","window","location","pathname","search","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.72510096.chunk.js","sourcesContent":["export const CommonTheme = {\n  purple: '#b388ff',\n  blue: '#80d8ff',\n  darkBlue: '#304ffe',\n  green: '#00c853',\n  lightYellow: '#fff9c4',\n  yellow: '#feed89',\n  red: '#ff899b',\n  orange: '#FF665A',  \n\n  dark1: '#172b4d',\n  dark2: '#505f79',\n  dark3: '#97a0af',\n\n  light1: '#f4f5f7',\n  light2: '#ebecf0',\n  light3: '#dfe1e5',\n  light4: '#c6c9c9',\n\n  black: '#000000',\n  white: '#ffffff',\n  transparent: 'rgba(0,0,0,0)',\n\n  breakpoints: {\n    zero: 0,\n    mobile: 600,\n  },\n}\n\nexport default {\n  light: {\n    ...CommonTheme,\n    text: CommonTheme.black,\n    background: CommonTheme.white,\n    primary: '#40B0EF',\n    link: '#FF665A',\n    accent: '#ffdcc7',\n    subtitle: CommonTheme.dark3,\n    isDark: false,\n  },\n  dark: {\n    ...CommonTheme,\n    text: CommonTheme.white,\n    background: '#020202',\n    primary: '#448aff',\n    link: '#314D5D',\n    accent: '#ffff8d',\n    subtitle: CommonTheme.light3,\n    isDark: true,\n  }\n};\n","import { createContext } from \"react\";\n\nexport type ThemeType = \"light\" | \"dark\";\n\ntype ThemeContextProps = {\n  theme: ThemeType;\n  toggleTheme: () => void;\n};\n\nexport const ThemeContext = createContext({} as ThemeContextProps);\n","import styled from \"styled-components\";\nimport { PAGE_CONTENT_WIDTH } from \"./PageConstants\";\n\nexport const InterFont = `Inter, -apple-system, BlinkMacSystemFont, San Francisco, Roboto, Segoe UI, Helvetica Neue, sans-serif`;\nexport const AndersonFont = `'Anderson Grotesk', -apple-system, BlinkMacSystemFont, San Francisco, Roboto, Segoe UI, Helvetica Neue, sans-serif`;\n\nexport const PageWrapper = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 16px;\n  width: 100vw;\n`;\n\nexport const PageContent = styled.div`\n  max-width: ${PAGE_CONTENT_WIDTH}px;\n  width: 100%;\n  margin: 0 auto;\n  padding-left: 32px;\n  padding-right: 32px;\n\n  @media only screen and (max-width: ${PAGE_CONTENT_WIDTH}px) {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`;\n\nexport const PageLink = styled.a`\n  position: relative;\n  font-weight: 700;\n  color: ${({ theme }) => theme.link};\n  transition: 0.2s all ease-in-out;\n\n  ${({ theme }) =>\n    theme.isDark\n      ? `background-image: linear-gradient(\n          ${theme.lightYellow} 0%,\n          ${theme.lightYellow} 100%\n        );`\n      : `background-image: linear-gradient(\n          transparent 60%,\n          ${theme.accent} 12px\n        );`}\n\n  background-size: 0;\n  background-repeat: no-repeat;\n\n  &::after {\n    position: absolute;\n    content: \"\";\n    background-color: ${({ theme }) =>\n      theme.isDark ? theme.lightYellow : theme.accent};\n    height: ${({ theme }) => (theme.isDark ? \"120%\" : \"8px\")};\n    ${({ theme }) => (theme.isDark ? \"top: -10%;\" : \"top: 100%;\")}\n    ${({ theme }) => (theme.isDark ? \"\" : \"transform: translateY(-100%);\")}\n    white-space: nowrap;\n  }\n\n  &:hover {\n    background-size: 100%;\n    color: ${({ theme }) => (theme.isDark ? theme.darkBlue : theme.link)};\n  }\n`;\n","export const PAGE_CONTENT_WIDTH = 830;","import React, { useEffect } from \"react\";\nimport { GitHub, Mail, Linkedin, FileText } from \"react-feather\";\nimport styled from \"styled-components\";\nimport { PageLink, PageContent, PageWrapper } from \"constants/Mixins\";\n\nconst HomePage = () => {\n  useEffect(() => {\n    document.title = \"Arav Watwani\";\n  }, []);\n\n  return (\n    <PageWrapper>\n      <PageContent>\n        <Header>\n          <Name>Arav Watwani</Name>\n          <Subtitle>Software Engineer</Subtitle>\n          <Icons>\n            <IconLink\n              href={\"https://github.com/aravwatwani\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <GitHub />\n            </IconLink>\n\n            <IconLink\n              href={\"resume.pdf\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FileText />\n            </IconLink>\n\n            <IconLink\n              href={\"mailto:arav@berkeley.edu\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Mail />\n            </IconLink>\n            <IconLink\n              href={\"https://linkedin.com/in/aravwatwani\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Linkedin />\n            </IconLink>\n          </Icons>\n        </Header>\n        <Section>\n          <SectionTitle>About</SectionTitle>\n\n          <Description>\n            Hello! I'm Arav—nice to meet you! Most recently, I was an engineering intern at{\" \"}\n            <PageLink\n              href={\"https://loop.com\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Loop\n            </PageLink>{\" \"}\n            in San Francisco, building software to simplify payments in the logistics industry.\n\n            I've also worked on payments at{\" \"}\n            <PageLink\n              href={\"https://gusto.com\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Gusto\n            </PageLink>{\" \"}\n            in San Francisco, and helped build out {\" \"}\n            <PageLink\n              href={\"https://joinattain.com\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Attain (YC W22)\n            </PageLink>, a platform focused on centralizing inventory for convenience store owners.\n          </Description>\n          <Description>\n            I study computer science at{\" \"}\n            <PageLink\n              href={\"https://berkeley.edu\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              UC Berkeley\n            </PageLink>{\" \"}\n            and am also a{\" \"}\n            <PageLink\n              href={\"https://fellows.kleinerperkins.com/\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Kleiner Perkins\n            </PageLink>{\" \"}\n            and{\" \"}\n            <PageLink\n              href={\"https://8vc.com/fellows/arav-watwani\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              8VC\n            </PageLink>{\" \"}\n            Engineering Fellow. In my free time, I take lots of {\" \"}\n            <PageLink\n              href={\"https://ocf.io/~aravwatwani\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {\" \"}\n              photos\n            </PageLink>\n            , try to make latte art, and watch Chelsea FC and Chicago sports.\n          </Description>\n          <Description>\n            Feel free to contact me at\n            <PageLink\n              href={\"mailto:arav@berkeley.edu\"}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {\" \"}\n              arav@berkeley.edu\n            </PageLink>\n            .\n          </Description>\n        </Section>\n        <Section>\n          <PageLink href={\"/writing\"} rel=\"noopener noreferrer\">\n            <SectionTitle>Writing &#8594;</SectionTitle>\n          </PageLink>\n        </Section>\n\n        <Section>\n          <Footer>\n            A work in progress. Last updated in <PageLink> December 2023</PageLink>.\n          </Footer>\n        </Section>\n      </PageContent>\n    </PageWrapper>\n  );\n};\n\nexport default HomePage;\n\nconst Header = styled.div`\n  margin: 120px auto 70px auto;\n`;\n\nconst Name = styled.div`\n  font-weight: 600;\n  font-size: 38px;\n  margin-bottom: 8px;\n  // color: ${({ theme }) => theme.black};\n  color: #ff665a;\n`;\n\nconst Subtitle = styled.div`\n  font-weight: 450;\n  font-size: 20px;\n  margin-bottom: 40px;\n  color: ${({ theme }) => theme.subtitle};\n`;\n\nconst IconLink = styled(PageLink)`\n  &:hover {\n    background-size: 0;\n    svg {\n      fill: ${({ theme }) => theme.accent};\n      transition: 0.2s all ease-in-out;\n    }\n  }\n`;\n\nconst Icons = styled.div`\n  display: inline-block;\n  margin-right: 24px;\n\n  svg {\n    width: 22px;\n    margin-right: 16px;\n    stroke: ${({ theme }) => theme.subtitle};\n  }\n`;\n\nconst Description = styled.div<{ marginBottom?: number }>`\n  line-height: 1.5;\n  margin-bottom: ${({ marginBottom = 24 }) => marginBottom}px;\n`;\n\nconst Footer = styled.div<{ marginBottom?: number }>`\n  line-height: 1.5;\n  margin-bottom: ${({ marginBottom = 24 }) => marginBottom}px;\n  text-align: left;\n  position: relative;\n  font-size: 13px;\n  color: ${({ theme }) => theme.subtitle};\n`;\n\nconst Section = styled.div`\n  margin-bottom: 70px;\n`;\n\nconst SectionTitle = styled.div`\n  display: inline-block;\n  position: relative;\n  font-weight: 700;\n  font-size: 20px;\n  margin-bottom: 32px;\n\n  &::after {\n    content: \"\";\n    background-color: ${({ theme }) => \"#ffdcc7\"};\n    height: 8px;\n    position: absolute;\n    top: 60%;\n    left: 0;\n    width: 100%;\n    z-index: -1;\n    opacity: 1;\n    transition: 0.2s all ease-in-out;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { PageLink } from \"constants/Mixins\";\n\ntype ProjectProps = {\n  title: string;\n  description: string;\n  tags: string[];\n  tagColors: string[];\n  readUrl: string;\n  margin?: string;\n};\n\nconst Project = ({\n  title,\n  description,\n  tags = [],\n  tagColors = [],\n  readUrl,\n  margin = \"18px 0 0 0\",\n}: ProjectProps) => (\n  <ProjectWrapper margin={margin} style={{ border: '1.5px solid #D3D3D3', borderRadius: '8px', padding: '30px' }}>\n    <LeftColumn style={{ marginRight: \"60px\" }}>\n      <Title>{title}</Title>\n      <Tags>\n        {tags.map((tag, idx) => (\n          <Tag color={tagColors[idx]}>{tag}</Tag>\n        ))}\n      </Tags>\n    </LeftColumn>\n    <RightColumn>\n      <Description>{description}</Description>\n      <Icons>\n        <Icon>\n          <PageLink href={readUrl} rel=\"noopener noreferrer\">\n            Read\n            <PageLink> &#8594;\n            </PageLink>\n          </PageLink>\n        </Icon>\n      </Icons>\n    </RightColumn>\n  </ProjectWrapper>\n);\n\nexport default Project;\n\nconst ProjectWrapper = styled.div<{ margin: string }>`\n  margin: ${({ margin }) => margin};\n  display: flex;\n  flex-direction: row;\n\n  @media only screen and (max-width: ${({ theme }) =>\n    theme.breakpoints.mobile}px) {\n    flex-direction: column;\n  }\n`;\n\nconst Title = styled.div`\n  display: flex;\n  font-weight: 700;\n  color: ${({ theme }) => theme.text};\n  margin-bottom: 16px;\n`;\n\nconst Tags = styled.div`\n  width: 180px;\n\n  @media only screen and (max-width: ${({ theme }) =>\n    theme.breakpoints.mobile}px) {\n    width: 100%;\n    margin-bottom: 16px;\n  }\n`;\n\nconst Tag = styled.div<{ color: string }>`\n  position: relative;\n  font-size: 14px;\n  font-weight: 400;\n  display: inline-block;\n  padding: 2px 4px;\n  max-width: fit-content;\n  color: ${({ theme }) => theme.dark1};\n  background-color: ${({ color }) => color};\n  border-radius: 4px;\n  white-space: nowrap;\n  margin-right: 4px;\n  margin-bottom: 4px;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    background: ${({ theme }) => theme.white}80;\n    z-index: -1;\n  }\n`;\n\nconst Description = styled.div`\n  color: ${({ theme }) => theme.text};\n  margin-bottom: 16px;\n`;\n\nconst LeftColumn = styled.div`\n  width: 40%;\n  display: flex;\n  flex-direction: column;\n`;\nconst RightColumn = styled.div`\n  width: 60%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Icons = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nconst Icon = styled.div`\n  margin-right: 24px;\n  align-items: center;\n  display: flex;\n\n  svg {\n    margin-right: 4px;\n  }\n\n  @media only screen and (max-width: ${({ theme }) =>\n    theme.breakpoints.mobile}px) {\n    margin-bottom: 8px;\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { PageContent, PageLink, PageWrapper } from \"constants/Mixins\";\nimport styled from \"styled-components\";\nimport Project from \"components/Project\";\n\nconst WritingPage = () => {\n  useEffect(() => {\n    document.title = \"writing\";\n  }, []);\n\n  return (\n    <PageWrapper>\n      <PageContent>\n        <Section>\n          <Title>Writing</Title>\n          <Project \n            title={\"lessons from my internship at loop\"} \n            description={\"a gap semester well spent\"}\n            tags={[\"2023-12-12\"]} \n            tagColors={[\"orange\"]}\n            readUrl={\"/writing/loop\"}\n          />\n          <Project \n            title={\"clarity and drive\"} \n            description={\"finding the roots of what makes you tick\"}\n            tags={[\"2022-11-09\"]} \n            tagColors={[\"orange\"]}\n            readUrl={\"/writing/clarity-and-drive\"}\n          />\n          <Project \n            title={\"risk aversion\"} \n            description={\"thoughts preceding big life decisions shouldn't be as draining as you think\"}\n            tags={[\"2022-02-11\"]} \n            tagColors={[\"orange\"]}\n            readUrl={\"/writing/risk-aversion\"}\n          />\n        </Section>\n        <Section>\n          <Link to=\"/\">\n            <PageLink>&#8592; Back to home</PageLink>\n          </Link>\n        </Section>\n      </PageContent>\n    </PageWrapper>\n\n    \n  );\n};\n\nexport default WritingPage;\n\nconst Title = styled.div`\n  font-size: 32px;\n  margin-top: 120px;\n  margin-bottom: 40px;\n  font-weight: 700;\n  color: #FF665A;\n`;\n\nconst Section = styled.div`\n  margin-bottom: 70px;\n`;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { PageContent, PageLink, PageWrapper } from \"constants/Mixins\";\nimport styled from \"styled-components\";\n\nconst NotFoundPage = () => {\n  useEffect(() => {\n    document.title = \"Arav Watwani\";\n  }, []);\n\n  return (\n    <PageWrapper>\n      <PageContent>\n        <Text>This page doesn't exist!</Text>\n        <Link to=\"/\">\n          <PageLink>&#8592; Home</PageLink>\n        </Link>\n      </PageContent>\n    </PageWrapper>\n  );\n};\n\nexport default NotFoundPage;\n\nconst Text = styled.div`\n  font-size: 32px;\n  font-weight: 700;\n  margin-top: 120px;\n  margin-bottom: 40px;\n  color: #FF665A;\n`;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { NotionRenderer } from 'react-notion';\n\nimport { Link } from \"react-router-dom\";\nimport { PageLink, PageWrapper } from \"constants/Mixins\";\n\n// For styling markdown content\nimport 'react-notion/src/styles.css';\nimport './writing.css';\n\nexport default function RiskAversion() {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    document.title = \"risk aversion - writing\";\n  }, []);\n\n  useEffect(() => {\n    fetch(\n      'https://notion-api.splitbee.io/v1/page/2d7a76e151164833a52abb2d6c484204'\n    )\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(res.statusText)\n        }\n        return res.json();\n      })\n      .then((data) => setData(data))\n      .catch(err => {\n        console.log(err)\n      });\n  }, []);\n\n  return (\n    <PageWrapper className='writing'>\n      <div className=\"writing\">\n        <Link to=\"/writing\">\n          <PageLink>&#8592; Writing</PageLink>\n        </Link>\n        <h1>risk aversion</h1>\n        <h4>thoughts preceding big life decisions shouldn't be as draining as you think</h4>\n        <p>2022-02-11</p>\n        <NotionRenderer blockMap={data} />\n      </div>\n    </PageWrapper>\n\n  );\n}\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { NotionRenderer } from 'react-notion';\n\nimport { Link } from \"react-router-dom\";\nimport { PageLink, PageWrapper } from \"constants/Mixins\";\n\n// For styling markdown content\nimport 'react-notion/src/styles.css';\nimport './writing.css';\n\nfunction RiskAversion() {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    document.title = \"clarity and drive - writing\";\n  }, []);\n\n  useEffect(() => {\n    fetch(\n      'https://notion-api.splitbee.io/v1/page/29c1718f5e0144fe80ecc92da59cd7c8'\n    )\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(res.statusText)\n        }\n        return res.json();\n      })\n      .then((data) => setData(data))\n      .catch(err => {\n        console.log(err)\n      });\n  }, []);\n\n  return (\n    <PageWrapper className='writing'>\n      <div className=\"writing\">\n        <Link to=\"/writing\">\n          <PageLink>&#8592; Writing</PageLink>\n        </Link>\n        <h1>clarity and drive</h1>\n        <h4>finding the roots of what makes you tick</h4>\n        <p>2022-11-09</p>\n        <NotionRenderer blockMap={data} />\n      </div>\n    </PageWrapper>\n\n  );\n}\n\nexport default RiskAversion;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { NotionRenderer } from 'react-notion';\n\nimport { Link } from \"react-router-dom\";\nimport { PageLink, PageWrapper } from \"constants/Mixins\";\n\n// For styling markdown content\nimport 'react-notion/src/styles.css';\nimport './writing.css';\n\nexport default function Loop() {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    document.title = \"lessons from my internship at loop - writing\";\n  }, []);\n\n  useEffect(() => {\n    fetch(\n      'https://notion-api.splitbee.io/v1/page/bb01ab5824864d64adb27cc916985628'\n    )\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(res.statusText)\n        }\n        return res.json();\n      })\n      .then((data) => setData(data))\n      .catch(err => {\n        console.log(err)\n      });\n  }, []);\n\n  return (\n    <PageWrapper className='writing'>\n      <div className=\"writing\">\n        <Link to=\"/writing\">\n          <PageLink>&#8592; Writing</PageLink>\n        </Link>\n        <h1>lessons from my internship at loop</h1>\n        <h4>a gap semester well spent</h4>\n        <p>2023-12-12</p>\n        <p>coming soon...</p>\n        <NotionRenderer blockMap={data} />\n      </div>\n    </PageWrapper>\n\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport HomePage from \"pages/HomePage\";\nimport WritingPage from \"pages/WritingPage\";\nimport NotFoundPage from \"pages/NotFoundPage\";\nimport RiskAversion from \"pages/writing/RiskAversion\";\nimport ClarityAndDrive from \"pages/writing/ClarityAndDrive\";\nimport Loop from \"pages/writing/Loop\";\n\nconst Routes = () => (\n  <BrowserRouter basename=\"/\">\n    <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route exact path=\"/writing\" component={WritingPage} />\n      <Route exact path=\"/writing/risk-aversion\" component={RiskAversion} />\n      <Route exact path=\"/writing/clarity-and-drive\" component={ClarityAndDrive} />\n      <Route exact path=\"/writing/loop\" component={Loop} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n\n","import React, { useEffect, useState } from \"react\";\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\n\nimport Theme from \"constants/Theme\";\nimport { ThemeContext, ThemeType } from \"context/ThemeContext\";\nimport Routes from \"Routes\";\n\nconst THEME_KEY = \"theme\";\nconst currentTheme = () => {\n  const stored = localStorage.getItem(THEME_KEY);\n  if (stored === \"light\" || stored === \"dark\") {\n    return stored;\n  }\n  return \"light\";\n};\n\nconst GlobalStyle = createGlobalStyle`\n  body, html {\n    color: ${({ theme }) => theme.text};\n    background: ${({ theme }) => theme.background};\n  }\n`;\n\nconst App = () => {\n  useEffect(() => {}, []);\n\n  const [theme, setTheme] = useState<ThemeType>(currentTheme());\n  const toggleTheme = () => {\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(newTheme);\n    localStorage.setItem(THEME_KEY, newTheme);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      <ThemeProvider theme={theme === \"light\" ? Theme.light : Theme.dark}>\n        <GlobalStyle />\n        <Body>\n          <Routes />\n        </Body>\n      </ThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default App;\n\nconst Body = styled.div`\n  min-height: 100vh;\n  color: ${({ theme }) => theme.text};\n  background: ${({ theme }) => theme.background};\n  transition: 0.2s background ease-in-out;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactGA from \"react-ga\";\n\nimport App from \"App\";\n\nimport \"./index.css\";\n\nif (process.env.NODE_ENV && process.env.NODE_ENV !== \"development\") {\n  ReactGA.initialize(\"UA-101333629-1\");\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}